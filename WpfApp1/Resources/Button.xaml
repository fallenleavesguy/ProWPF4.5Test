<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Resources used by the template.  -->
    <RadialGradientBrush x:Key="HighlightBackground" GradientOrigin="0.5,0.3" RadiusX="1" RadiusY="5">
        <GradientStop Offset="0" Color="White" />
        <GradientStop Offset=".4" Color="Blue" />
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="PressedBackground" GradientOrigin="0.5,0.3" RadiusX="1" RadiusY="5">
        <GradientStop Offset="0" Color="White" />
        <GradientStop Offset="1" Color="Blue" />
    </RadialGradientBrush>
    <SolidColorBrush x:Key="DefaultBackground" Color="Blue" />
    <SolidColorBrush x:Key="DisabledBackground" Color="Gray" />
    <RadialGradientBrush x:Key="Border" GradientOrigin="0.5,0.3" RadiusX="1" RadiusY="5">
        <GradientStop Offset="0" Color="White" />
        <GradientStop Offset="1" Color="Blue" />
    </RadialGradientBrush>
    <!--  The button control template.  -->
    <ControlTemplate x:Key="GradientButtonTemplate" TargetType="{x:Type Button}">
        <Border
            Name="Border"
            Background="{StaticResource DefaultBackground}"
            BorderBrush="{StaticResource Border}"
            BorderThickness="2"
            CornerRadius="2"
            TextBlock.Foreground="White">
            <Grid>
                <Rectangle
                    Name="FocusCue"
                    SnapsToDevicePixels="True"
                    Stroke="Black"
                    StrokeDashArray="1 2"
                    StrokeThickness="1"
                    Visibility="Hidden" />
                <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBackground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusCue" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="CustomButtonTemplate" TargetType="{x:Type Button}">
        <Border
            Name="Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="2"
            CornerRadius="2">
            <Grid>
                <Rectangle
                    Name="FocusCue"
                    SnapsToDevicePixels="True"
                    Stroke="Black"
                    StrokeDashArray="1 2"
                    StrokeThickness="1"
                    Visibility="Hidden" />
                <ContentPresenter Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusCue" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.Template" Value="{StaticResource CustomButtonTemplate}" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="Background" Value="{StaticResource DefaultBackground}" />
        <Setter Property="TextBlock.Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>